{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\write\\\\WriteActionButtonsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { writePost } from \"../../modules/write\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WriteActionButtonsContainer = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    title,\n    body,\n    tags,\n    post,\n    postError\n  } = useSelector(_ref2 => {\n    let {\n      write\n    } = _ref2;\n    return {\n      title: write.title,\n      body: write.body,\n      tags: write.tags,\n      post: write.post,\n      postError: write.postError\n    };\n  }); //포스트 등록\n\n  const onPublish = () => {\n    dispatch(writePost({\n      title,\n      body,\n      tags\n    }));\n  }; //취소\n\n\n  const onCancel = () => {\n    history.goBack();\n  }; //성공 혹은 실패 시 할 작업\n\n\n  useEffect(() => {\n    if (post) {\n      const {\n        _id,\n        user\n      } = post;\n      history.push(`/@${user.username}/${_id}`);\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return /*#__PURE__*/_jsxDEV(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\n_s(WriteActionButtonsContainer, \"mRKy24Lk0Xkx230U+xPao6x41DM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WriteActionButtonsContainer;\nexport default _c2 = withRouter(WriteActionButtonsContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WriteActionButtonsContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writePost","WriteActionButtonsContainer","history","dispatch","title","body","tags","post","postError","write","onPublish","onCancel","goBack","_id","user","push","username","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;AAEA,MAAMC,2BAA2B,GAAC,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC7C,QAAMC,QAAQ,GAACL,WAAW,EAA1B;AACA,QAAM;AAACM,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAqCX,WAAW,CAAC;AAAA,QAAC;AAACY,MAAAA;AAAD,KAAD;AAAA,WAAY;AACjEL,MAAAA,KAAK,EAACK,KAAK,CAACL,KADqD;AAEjEC,MAAAA,IAAI,EAACI,KAAK,CAACJ,IAFsD;AAGjEC,MAAAA,IAAI,EAACG,KAAK,CAACH,IAHsD;AAIjEC,MAAAA,IAAI,EAACE,KAAK,CAACF,IAJsD;AAKjEC,MAAAA,SAAS,EAACC,KAAK,CAACD;AALiD,KAAZ;AAAA,GAAD,CAAtD,CAF6C,CAU7C;;AACA,QAAME,SAAS,GAAC,MAAI;AAClBP,IAAAA,QAAQ,CACNH,SAAS,CAAC;AACRI,MAAAA,KADQ;AACDC,MAAAA,IADC;AACKC,MAAAA;AADL,KAAD,CADH,CAAR;AAKD,GAND,CAX6C,CAmB7C;;;AACA,QAAMK,QAAQ,GAAC,MAAI;AACjBT,IAAAA,OAAO,CAACU,MAAR;AACD,GAFD,CApB6C,CAwB7C;;;AACAjB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGY,IAAH,EAAQ;AACN,YAAM;AAACM,QAAAA,GAAD;AAAMC,QAAAA;AAAN,UAAYP,IAAlB;AACAL,MAAAA,OAAO,CAACa,IAAR,CAAc,KAAID,IAAI,CAACE,QAAS,IAAGH,GAAI,EAAvC;AACD;;AACD,QAAGL,SAAH,EAAa;AACXS,MAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACD;AACF,GARQ,EAQP,CAACN,OAAD,EAASK,IAAT,EAAcC,SAAd,CARO,CAAT;AASA,sBAAO,QAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEE,SAA/B;AAA0C,IAAA,QAAQ,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnCD;;GAAMV,2B;UACWH,W,EAC4BD,W;;;KAFvCI,2B;AAqCN,qBAAeF,UAAU,CAACE,2BAAD,CAAzB","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { writePost } from \"../../modules/write\";\r\n\r\nconst WriteActionButtonsContainer=({history})=>{\r\n  const dispatch=useDispatch();\r\n  const {title, body, tags, post, postError}=useSelector(({write})=>({\r\n    title:write.title,\r\n    body:write.body,\r\n    tags:write.tags,\r\n    post:write.post,\r\n    postError:write.postError\r\n  }))\r\n\r\n  //포스트 등록\r\n  const onPublish=()=>{\r\n    dispatch(\r\n      writePost({\r\n        title, body, tags\r\n      })\r\n    )\r\n  };\r\n\r\n  //취소\r\n  const onCancel=()=>{\r\n    history.goBack();\r\n  }\r\n\r\n  //성공 혹은 실패 시 할 작업\r\n  useEffect(()=>{\r\n    if(post){\r\n      const {_id, user}=post;\r\n      history.push(`/@${user.username}/${_id}`);\r\n    }\r\n    if(postError){\r\n      console.log(postError);\r\n    }\r\n  },[history,post,postError])\r\n  return <WriteActionButtons onPublish={onPublish} onCancel={onCancel}></WriteActionButtons>\r\n}\r\n\r\nexport default withRouter(WriteActionButtonsContainer);"]},"metadata":{},"sourceType":"module"}