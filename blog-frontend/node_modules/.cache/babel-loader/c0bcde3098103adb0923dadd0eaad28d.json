{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequestSaga\";\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_POST, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\nexport const listPosts = createAction(LIST_POST, _ref => {\n  let {\n    tag,\n    username,\n    page\n  } = _ref;\n  return {\n    tag,\n    username,\n    page\n  };\n});\nconst listPostsSaga = createRequestSaga(LIST_POST, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POST, listPostsSaga);\n}\nconst initialState = {\n  posts: null,\n  error: null\n};\nconst posts = handleActions({\n  [LIST_POSTS_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: posts\n    } = _ref2;\n    return { ...state,\n      posts\n    };\n  },\n  [LIST_POSTS_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);\nexport default posts;","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/modules/posts.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","LIST_POST","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","tag","username","page","listPostsSaga","postsSaga","initialState","posts","error","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IAA0BC,wBAA1B,QAAyD,0BAAzD;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAAQC,UAAR,QAA0B,oBAA1B;AAEA,MAAM,CACJC,SADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIJL,wBAAwB,CAAC,kBAAD,CAJ1B;AAMA,OAAO,MAAMM,SAAS,GAACT,YAAY,CACjCM,SADiC,EAEjC;AAAA,MAAC;AAACI,IAAAA,GAAD;AAAMC,IAAAA,QAAN;AAAeC,IAAAA;AAAf,GAAD;AAAA,SAAyB;AAACF,IAAAA,GAAD;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,GAAzB;AAAA,CAFiC,CAA5B;AAKP,MAAMC,aAAa,GAACX,iBAAiB,CAACI,SAAD,EAAWF,QAAQ,CAACK,SAApB,CAArC;AACA,OAAO,UAAUK,SAAV,GAAqB;AAC1B,QAAMT,UAAU,CAACC,SAAD,EAAYO,aAAZ,CAAhB;AACD;AACD,MAAME,YAAY,GAAC;AACjBC,EAAAA,KAAK,EAAC,IADW;AACLC,EAAAA,KAAK,EAAC;AADD,CAAnB;AAIA,MAAMD,KAAK,GAACf,aAAa,CACvB;AACE,GAACM,kBAAD,GAAqB,CAACW,KAAD;AAAA,QAAO;AAACC,MAAAA,OAAO,EAACH;AAAT,KAAP;AAAA,WAA0B,EAC7C,GAAGE,KAD0C;AACnCF,MAAAA;AADmC,KAA1B;AAAA,GADvB;AAIE,GAACR,kBAAD,GAAqB,CAACU,KAAD;AAAA,QAAO;AAACC,MAAAA,OAAO,EAACF;AAAT,KAAP;AAAA,WAA0B,EAC7C,GAAGC,KAD0C;AACnCD,MAAAA;AADmC,KAA1B;AAAA;AAJvB,CADuB,EAQpBF,YARoB,CAAzB;AAWA,eAAeC,KAAf","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga,{createRequestActionTypes} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport {takeLatest } from 'redux-saga/effects';\r\n\r\nconst [\r\n  LIST_POST,\r\n  LIST_POSTS_SUCCESS,\r\n  LIST_POSTS_FAILURE  \r\n]=createRequestActionTypes('posts/LIST_POSTS');\r\n\r\nexport const listPosts=createAction(\r\n  LIST_POST,\r\n  ({tag, username,page})=>({tag, username, page})\r\n);\r\n\r\nconst listPostsSaga=createRequestSaga(LIST_POST,postsAPI.listPosts);\r\nexport function* postsSaga(){\r\n  yield takeLatest(LIST_POST, listPostsSaga);\r\n}\r\nconst initialState={\r\n  posts:null, error:null\r\n}\r\n\r\nconst posts=handleActions(\r\n  {\r\n    [LIST_POSTS_SUCCESS]:(state,{payload:posts})=>({\r\n      ...state, posts\r\n    }),\r\n    [LIST_POSTS_FAILURE]:(state,{payload:error})=>({\r\n      ...state, error\r\n    })\r\n  }, initialState\r\n)\r\n\r\nexport default posts;"]},"metadata":{},"sourceType":"module"}