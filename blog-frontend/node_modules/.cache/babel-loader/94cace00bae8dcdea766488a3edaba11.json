{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\write\\\\WriteActionButtonsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { writePost, updatePost } from \"../../modules/write\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WriteActionButtonsContainer = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    title,\n    body,\n    tags,\n    post,\n    postError,\n    originalPostId\n  } = useSelector(_ref2 => {\n    let {\n      write\n    } = _ref2;\n    return {\n      title: write.title,\n      body: write.body,\n      tags: write.tags,\n      post: write.post,\n      postError: write.postError,\n      originalPostId: write.originalPostId\n    };\n  }); //포스트 등록\n\n  const onPublish = () => {\n    if (originalPostId) {\n      dispatch(updatePost({\n        title,\n        body,\n        tags,\n        id: originalPostId\n      }));\n      return;\n    }\n\n    dispatch(writePost({\n      title,\n      body,\n      tags\n    }));\n  }; //취소\n\n\n  const onCancel = () => {\n    history.goBack();\n  }; //성공 혹은 실패 시 할 작업\n\n\n  useEffect(() => {\n    if (post) {\n      const {\n        _id,\n        user\n      } = post;\n      history.push(`/@${user.username}/${_id}`);\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return /*#__PURE__*/_jsxDEV(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel,\n    isEdit: !!originalPostId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(WriteActionButtonsContainer, \"u7Kilw/xWw9lE6O4W2iGZr9HN6U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WriteActionButtonsContainer;\nexport default _c2 = withRouter(WriteActionButtonsContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WriteActionButtonsContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writePost","updatePost","WriteActionButtonsContainer","history","dispatch","title","body","tags","post","postError","originalPostId","write","onPublish","id","onCancel","goBack","_id","user","push","username","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;;;AAEA,MAAMC,2BAA2B,GAAC,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC7C,QAAMC,QAAQ,GAACN,WAAW,EAA1B;AACA,QAAM;AAACO,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA;AAArC,MAAqDb,WAAW,CAAC;AAAA,QAAC;AAACc,MAAAA;AAAD,KAAD;AAAA,WAAY;AACjFN,MAAAA,KAAK,EAACM,KAAK,CAACN,KADqE;AAEjFC,MAAAA,IAAI,EAACK,KAAK,CAACL,IAFsE;AAGjFC,MAAAA,IAAI,EAACI,KAAK,CAACJ,IAHsE;AAIjFC,MAAAA,IAAI,EAACG,KAAK,CAACH,IAJsE;AAKjFC,MAAAA,SAAS,EAACE,KAAK,CAACF,SALiE;AAMjFC,MAAAA,cAAc,EAACC,KAAK,CAACD;AAN4D,KAAZ;AAAA,GAAD,CAAtE,CAF6C,CAW7C;;AACA,QAAME,SAAS,GAAC,MAAI;AAClB,QAAGF,cAAH,EAAkB;AAChBN,MAAAA,QAAQ,CAACH,UAAU,CAAC;AAACI,QAAAA,KAAD;AAAOC,QAAAA,IAAP;AAAYC,QAAAA,IAAZ;AAAiBM,QAAAA,EAAE,EAACH;AAApB,OAAD,CAAX,CAAR;AACA;AACD;;AACDN,IAAAA,QAAQ,CACNJ,SAAS,CAAC;AACRK,MAAAA,KADQ;AACDC,MAAAA,IADC;AACKC,MAAAA;AADL,KAAD,CADH,CAAR;AAKD,GAVD,CAZ6C,CAwB7C;;;AACA,QAAMO,QAAQ,GAAC,MAAI;AACjBX,IAAAA,OAAO,CAACY,MAAR;AACD,GAFD,CAzB6C,CA6B7C;;;AACApB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGa,IAAH,EAAQ;AACN,YAAM;AAACQ,QAAAA,GAAD;AAAMC,QAAAA;AAAN,UAAYT,IAAlB;AACAL,MAAAA,OAAO,CAACe,IAAR,CAAc,KAAID,IAAI,CAACE,QAAS,IAAGH,GAAI,EAAvC;AACD;;AACD,QAAGP,SAAH,EAAa;AACXW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACD;AACF,GARQ,EAQP,CAACN,OAAD,EAASK,IAAT,EAAcC,SAAd,CARO,CAAT;AASA,sBAAO,QAAC,kBAAD;AACG,IAAA,SAAS,EAAEG,SADd;AAEG,IAAA,QAAQ,EAAEE,QAFb;AAGG,IAAA,MAAM,EAAE,CAAC,CAACJ;AAHb;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CA3CD;;GAAMR,2B;UACWJ,W,EAC4CD,W;;;KAFvDK,2B;AA6CN,qBAAeH,UAAU,CAACG,2BAAD,CAAzB","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { writePost, updatePost } from \"../../modules/write\";\r\n\r\nconst WriteActionButtonsContainer=({history})=>{\r\n  const dispatch=useDispatch();\r\n  const {title, body, tags, post, postError, originalPostId}=useSelector(({write})=>({\r\n    title:write.title,\r\n    body:write.body,\r\n    tags:write.tags,\r\n    post:write.post,\r\n    postError:write.postError,\r\n    originalPostId:write.originalPostId\r\n  }))\r\n\r\n  //포스트 등록\r\n  const onPublish=()=>{\r\n    if(originalPostId){\r\n      dispatch(updatePost({title,body,tags,id:originalPostId}))\r\n      return;\r\n    }\r\n    dispatch(\r\n      writePost({\r\n        title, body, tags\r\n      })\r\n    )\r\n  };\r\n\r\n  //취소\r\n  const onCancel=()=>{\r\n    history.goBack();\r\n  }\r\n\r\n  //성공 혹은 실패 시 할 작업\r\n  useEffect(()=>{\r\n    if(post){\r\n      const {_id, user}=post;\r\n      history.push(`/@${user.username}/${_id}`);\r\n    }\r\n    if(postError){\r\n      console.log(postError);\r\n    }\r\n  },[history,post,postError])\r\n  return <WriteActionButtons \r\n            onPublish={onPublish} \r\n            onCancel={onCancel}\r\n            isEdit={!!originalPostId}></WriteActionButtons>\r\n}\r\n\r\nexport default withRouter(WriteActionButtonsContainer);"]},"metadata":{},"sourceType":"module"}