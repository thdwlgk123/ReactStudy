{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\post\\\\PostViewerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { readPost, unloadPost } from \"../../modules/post\";\nimport PostViewer from \"../../components/post/PostViewer\";\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from \"../../modules/write\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostViewerContainer = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loading,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      post,\n      loading,\n      user\n    } = _ref2;\n    return {\n      post: post.post,\n      error: post.error,\n      loading: loading['post/READ_POST'],\n      user: user.user\n    };\n  });\n  useEffect(() => {\n    dispatch(readPost(postId));\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n\n  const onEdit = () => {\n    dispatch(setOriginalPost(post));\n    history.push('/write');\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    actionButtons: /*#__PURE__*/_jsxDEV(PostActionButtons, {\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 42\n    }, this),\n    ownPost: user && user.id === post && post.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PostViewerContainer, \"gBjPppDi+Ec1Wrh1puirloOA7Mg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostViewerContainer;\nexport default _c2 = withRouter(PostViewerContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostViewerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostActionButtons","setOriginalPost","PostViewerContainer","match","history","postId","params","dispatch","post","error","loading","user","onEdit","push","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,SAASC,eAAT,QAAgC,qBAAhC;;;AAEA,MAAMC,mBAAmB,GAAC,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAmB;AAC5C,QAAM;AAACC,IAAAA;AAAD,MAASF,KAAK,CAACG,MAArB;AACA,QAAMC,QAAQ,GAACb,WAAW,EAA1B;AACA,QAAM;AAACc,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAA6BhB,WAAW,CAAC;AAAA,QAAC;AAACa,MAAAA,IAAD;AAAOE,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB,KAAD;AAAA,WAA0B;AACvEH,MAAAA,IAAI,EAACA,IAAI,CAACA,IAD6D;AAEvEC,MAAAA,KAAK,EAACD,IAAI,CAACC,KAF4D;AAGvEC,MAAAA,OAAO,EAACA,OAAO,CAAC,gBAAD,CAHwD;AAIvEC,MAAAA,IAAI,EAACA,IAAI,CAACA;AAJ6D,KAA1B;AAAA,GAAD,CAA9C;AAOAlB,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,QAAQ,CAACV,QAAQ,CAACQ,MAAD,CAAT,CAAR;AAEA,WAAM,MAAI;AACRE,MAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACS,QAAD,EAAWF,MAAX,CANM,CAAT;;AAQA,QAAMO,MAAM,GAAC,MAAI;AACfL,IAAAA,QAAQ,CAACN,eAAe,CAACO,IAAD,CAAhB,CAAR;AACAJ,IAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACD,GAHD;;AAIA,sBAAO,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEL,IAAlB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AACG,IAAA,KAAK,EAAED,KADV;AACiB,IAAA,aAAa,eAAE,QAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEG;AAA3B;AAAA;AAAA;AAAA;AAAA,YADhC;AAEG,IAAA,OAAO,EAAED,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAUN,IAAlB,IAA0BA,IAAI,CAACM;AAF3C;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAzBD;;GAAMZ,mB;UAEWR,W,EACoBC,W;;;KAH/BO,mB;AA2BN,qBAAeN,UAAU,CAACM,mBAAD,CAAzB","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { readPost, unloadPost } from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostActionButtons from '../../components/post/PostActionButtons';\r\nimport { setOriginalPost } from \"../../modules/write\";\r\n\r\nconst PostViewerContainer=({match, history})=>{\r\n  const {postId}=match.params;\r\n  const dispatch=useDispatch();\r\n  const {post, error, loading, user}=useSelector(({post, loading, user})=>({\r\n    post:post.post,\r\n    error:post.error,\r\n    loading:loading['post/READ_POST'],\r\n    user:user.user\r\n  }));\r\n\r\n  useEffect(()=>{\r\n    dispatch(readPost(postId));\r\n\r\n    return()=>{\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId])\r\n\r\n  const onEdit=()=>{\r\n    dispatch(setOriginalPost(post));\r\n    history.push('/write');\r\n  }\r\n  return <PostViewer post={post} loading={loading} \r\n            error={error} actionButtons={<PostActionButtons onEdit={onEdit}/>}\r\n            ownPost={user && user.id===post && post.id}/>\r\n}\r\n\r\nexport default withRouter(PostViewerContainer);"]},"metadata":{},"sourceType":"module"}