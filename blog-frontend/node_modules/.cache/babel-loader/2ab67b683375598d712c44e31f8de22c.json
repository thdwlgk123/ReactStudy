{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\auth\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    form,\n    auth,\n    authError\n  } = useSelector(_ref => {\n    let {\n      auth\n    } = _ref;\n    return {\n      form: auth.register,\n      auth: auth.auth,\n      authError: auth.authError\n    };\n  }); //인풋 변경 이벤트 핸들러\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'register',\n      key: name,\n      value\n    }));\n  }; //폼 등록 이벤트 핸들러\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = form;\n\n    if (password !== passwordConfirm) {\n      console.log('비밀번호 불일치');\n      return;\n    }\n\n    dispatch(register({\n      username,\n      password\n    }));\n  }; //컴포넌트가 처음 렌더링될 때 form 을 초기화함\n\n\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]); //회원가입 성공/실패 처리\n\n  useEffect(() => {\n    if (authError) {\n      console.log('회원가입 성공');\n      console.log(auth);\n    }\n  }, [auth, authError]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"register\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"fsT7ir/lYq+SBdKI70HM6X6O4PU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/containers/auth/RegisterForm.js"],"names":["React","useEffect","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","RegisterForm","dispatch","form","auth","authError","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","passwordConfirm","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,QAAtC,QAAsD,oBAAtD;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,MAAMC,YAAY,GAAC,MAAI;AAAA;;AACrB,QAAMC,QAAQ,GAACP,WAAW,EAA1B;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAMC,IAAAA,IAAN;AAAWC,IAAAA;AAAX,MAAsBT,WAAW,CAAC;AAAA,QAAC;AAACQ,MAAAA;AAAD,KAAD;AAAA,WAAW;AACjDD,MAAAA,IAAI,EAAEC,IAAI,CAACL,QADsC;AAEjDK,MAAAA,IAAI,EAACA,IAAI,CAACA,IAFuC;AAGjDC,MAAAA,SAAS,EAACD,IAAI,CAACC;AAHkC,KAAX;AAAA,GAAD,CAAvC,CAFqB,CAOrB;;AACA,QAAMC,QAAQ,GAACC,CAAC,IAAE;AAChB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAcF,CAAC,CAACG,MAAtB;AACAR,IAAAA,QAAQ,CACNL,WAAW,CAAC;AACVM,MAAAA,IAAI,EAAC,UADK;AACOQ,MAAAA,GAAG,EAACF,IADX;AACiBD,MAAAA;AADjB,KAAD,CADL,CAAR;AAKD,GAPD,CARqB,CAgBrB;;;AACA,QAAMI,QAAQ,GAACL,CAAC,IAAE;AAChBA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,QAAsCb,IAA5C;;AACA,QAAGY,QAAQ,KAAGC,eAAd,EAA8B;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA;AACD;;AACDhB,IAAAA,QAAQ,CAACH,QAAQ,CAAC;AAACe,MAAAA,QAAD;AAAUC,MAAAA;AAAV,KAAD,CAAT,CAAR;AACD,GARD,CAjBqB,CA0BrB;;;AACArB,EAAAA,SAAS,CAAC,MAAI;AACZQ,IAAAA,QAAQ,CAACJ,cAAc,CAAC,UAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT,CA3BqB,CA8BvB;;AACAR,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGW,SAAH,EAAa;AACXY,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AACF,GALQ,EAKN,CAACA,IAAD,EAAOC,SAAP,CALM,CAAT;AAME,sBACE,QAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAEF,IAAhC;AAAsC,IAAA,QAAQ,EAAEG,QAAhD;AAA0D,IAAA,QAAQ,EAAEM;AAApE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CD;;GAAMX,Y;UACWN,W,EACaC,W;;;KAFxBK,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\n\r\nconst RegisterForm=()=>{\r\n  const dispatch=useDispatch();\r\n  const {form,auth,authError}=useSelector(({auth})=>({\r\n    form: auth.register,\r\n    auth:auth.auth,\r\n    authError:auth.authError\r\n  }));\r\n  //인풋 변경 이벤트 핸들러\r\n  const onChange=e=>{\r\n    const {value, name}=e.target;\r\n    dispatch(\r\n      changeField({\r\n        form:'register', key:name, value\r\n      })\r\n    )\r\n  };\r\n  //폼 등록 이벤트 핸들러\r\n  const onSubmit=e=>{\r\n    e.preventDefault();\r\n    const {username, password, passwordConfirm}=form;\r\n    if(password!==passwordConfirm){\r\n      console.log('비밀번호 불일치');\r\n      return;\r\n    }\r\n    dispatch(register({username,password}))\r\n  }\r\n  //컴포넌트가 처음 렌더링될 때 form 을 초기화함\r\n  useEffect(()=>{\r\n    dispatch(initializeForm('register'))\r\n  }, [dispatch]);\r\n//회원가입 성공/실패 처리\r\nuseEffect(()=>{\r\n  if(authError){\r\n    console.log('회원가입 성공');\r\n    console.log(auth);\r\n  }\r\n}, [auth, authError]);\r\n  return(\r\n    <AuthForm type='register' form={form} onChange={onChange} onSubmit={onSubmit}>\r\n\r\n    </AuthForm>\r\n  )\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}