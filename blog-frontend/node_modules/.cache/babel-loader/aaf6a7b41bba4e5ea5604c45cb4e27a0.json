{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\write\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorBlock = styled(Responsive)`\n  padding-top:5rem;\n  padding-bottom:5rem;\n`;\n_c = EditorBlock;\nconst TitleInput = styled.input`\n  font-size:3rem;\n  outline:none;\n  padding-bottom:0.5rem;\n  border:none;\n  border-bottom:1px solid ${palette.gray[4]};\n  margin-bottom:2rem;\n  width:100%;\n`;\n_c2 = TitleInput;\nconst QuillWrapper = styled.div`\n  .ql-editor{\n    padding:0;\n    min-height:320px;\n    font-size:1.125rem;\n    line-height:1.5;\n  }\n  .ql-editor.ql-blank::before{\n    left:0px;\n  }\n`;\n_c3 = QuillWrapper;\n\nconst Editor = _ref => {\n  _s();\n\n  let {\n    title,\n    body,\n    onChangeField\n  } = _ref;\n  const quillElement = useRef(null); //Quil을 적용할 divElement 설정\n\n  const quillInstance = useRef(null); //Quil 인스턴스를 설정\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요...',\n      modules: {\n        toolbar: [[{\n          'header': 1\n        }, {\n          'header': 2\n        }], ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n        ['blockquote', 'code-block', 'link', 'image'], [{\n          'list': 'ordered'\n        }, {\n          'list': 'bullet'\n        }]]\n      }\n    }); //quill에 text-change 이벤트 핸들러 등록\n\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({\n          key: 'body',\n          value: quill.root.innerHTML\n        });\n      }\n    });\n  }, [onChangeField]);\n\n  const onChangeTitle = e => {\n    onChangeField({\n      key: 'title',\n      value: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditorBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: onChangeTitle,\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuillWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: quillElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"6Cn/mTRP0NqVlGNpkx5D9B/BftI=\");\n\n_c4 = Editor;\nexport default Editor;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditorBlock\");\n$RefreshReg$(_c2, \"TitleInput\");\n$RefreshReg$(_c3, \"QuillWrapper\");\n$RefreshReg$(_c4, \"Editor\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/components/write/Editor.js"],"names":["React","useRef","useEffect","Quill","styled","palette","Responsive","EditorBlock","TitleInput","input","gray","QuillWrapper","div","Editor","title","body","onChangeField","quillElement","quillInstance","current","theme","placeholder","modules","toolbar","quill","on","delta","oldDelta","source","key","value","root","innerHTML","onChangeTitle","e","target"],"mappings":"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","sourcesContent":["import React,{useRef, useEffect} from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\n\r\nconst EditorBlock=styled(Responsive)`\r\n  padding-top:5rem;\r\n  padding-bottom:5rem;\r\n`;\r\nconst TitleInput=styled.input`\r\n  font-size:3rem;\r\n  outline:none;\r\n  padding-bottom:0.5rem;\r\n  border:none;\r\n  border-bottom:1px solid ${palette.gray[4]};\r\n  margin-bottom:2rem;\r\n  width:100%;\r\n`;\r\nconst QuillWrapper=styled.div`\r\n  .ql-editor{\r\n    padding:0;\r\n    min-height:320px;\r\n    font-size:1.125rem;\r\n    line-height:1.5;\r\n  }\r\n  .ql-editor.ql-blank::before{\r\n    left:0px;\r\n  }\r\n`;\r\n\r\nconst Editor=({title,body,onChangeField})=>{\r\n  const quillElement=useRef(null);  //Quil을 적용할 divElement 설정\r\n  const quillInstance=useRef(null); //Quil 인스턴스를 설정\r\n\r\n  useEffect(()=>{\r\n    quillInstance.current=new Quill(quillElement.current,{\r\n      theme:'bubble',\r\n      placeholder:'내용을 작성하세요...',\r\n      modules:{\r\n        toolbar:[\r\n          [{ 'header': 1 }, { 'header': 2 }],\r\n          ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n          ['blockquote', 'code-block','link','image'],\r\n          [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n        ]\r\n      }\r\n    });\r\n\r\n  //quill에 text-change 이벤트 핸들러 등록\r\n  const quill=quillInstance.current;\r\n  quill.on('text-change',(delta, oldDelta, source)=>{\r\n    if(source==='user'){\r\n      onChangeField({key:'body',value:quill.root.innerHTML});\r\n    }\r\n  });\r\n},[onChangeField]);\r\nconst onChangeTitle=e=>{\r\n  onChangeField({key:'title', value:e.target.value})\r\n}\r\n  return(\r\n    <EditorBlock>\r\n      <TitleInput placeholder='제목을 입력하세요.' onChange={onChangeTitle} value={title}/>\r\n        <QuillWrapper>\r\n          <div ref={quillElement}></div>\r\n        </QuillWrapper>\r\n    </EditorBlock>\r\n  )\r\n};\r\n\r\nexport default Editor;"]},"metadata":{},"sourceType":"module"}