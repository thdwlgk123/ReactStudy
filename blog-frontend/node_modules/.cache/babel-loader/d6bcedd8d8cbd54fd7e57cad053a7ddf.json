{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\posts\\\\PostListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/post/PostList';\nimport { listPosts } from '../../modules/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostListContainer = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    posts,\n    error,\n    loading,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      posts,\n      loading,\n      user\n    } = _ref2;\n    return {\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user\n    };\n  });\n  useEffect(() => {\n    const {\n      tag,\n      username,\n      page\n    } = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    dispatch(listPosts({\n      tag,\n      username,\n      page\n    }));\n  }, [dispatch, location.search]);\n  return /*#__PURE__*/_jsxDEV(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostListContainer, \"9MiaSTozWa5Ii1az8LmBhhCQuH4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostListContainer;\nexport default _c2 = withRouter(PostListContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostListContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/containers/posts/PostListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","PostListContainer","location","dispatch","posts","error","loading","user","tag","username","page","parse","search","ignoreQueryPrefix"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;AAEA,MAAMC,iBAAiB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACpC,QAAMC,QAAQ,GAACN,WAAW,EAA1B;AACA,QAAM;AAACO,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAA8BT,WAAW,CAC7C;AAAA,QAAC;AAACM,MAAAA,KAAD;AAAQE,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD;AAAA,WAA2B;AACzBH,MAAAA,KAAK,EAACA,KAAK,CAACA,KADa;AAEzBC,MAAAA,KAAK,EAACD,KAAK,CAACC,KAFa;AAGzBC,MAAAA,OAAO,EAACA,OAAO,CAAC,kBAAD,CAHU;AAIzBC,MAAAA,IAAI,EAACA,IAAI,CAACA;AAJe,KAA3B;AAAA,GAD6C,CAA/C;AASAb,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAM;AAACc,MAAAA,GAAD;AAAMC,MAAAA,QAAN;AAAgBC,MAAAA;AAAhB,QAAsBf,EAAE,CAACgB,KAAH,CAAST,QAAQ,CAACU,MAAlB,EAAyB;AACnDC,MAAAA,iBAAiB,EAAC;AADiC,KAAzB,CAA5B;AAGAV,IAAAA,QAAQ,CAACH,SAAS,CAAC;AAACQ,MAAAA,GAAD;AAAMC,MAAAA,QAAN;AAAgBC,MAAAA;AAAhB,KAAD,CAAV,CAAR;AACD,GALQ,EAKP,CAACP,QAAD,EAAWD,QAAQ,CAACU,MAApB,CALO,CAAT;AAOA,sBACE,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEN,OAAnB;AAA4B,IAAA,KAAK,EAAED,KAAnC;AAA0C,IAAA,KAAK,EAAED,KAAjD;AAAwD,IAAA,eAAe,EAAEG;AAAzE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArBD;;GAAMN,iB;UACWJ,W,EACqBC,W;;;KAFhCG,iB;AAuBN,qBAAeL,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React,{useEffect} from 'react';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostList from '../../components/post/PostList';\r\nimport { listPosts } from '../../modules/posts';\r\n\r\nconst PostListContainer=({location})=>{\r\n  const dispatch=useDispatch();\r\n  const {posts, error, loading, user}=useSelector(\r\n    ({posts, loading, user})=>({\r\n      posts:posts.posts,\r\n      error:posts.error,\r\n      loading:loading['posts/LIST_POSTS'],\r\n      user:user.user\r\n    })\r\n  );\r\n  \r\n  useEffect(()=>{\r\n    const {tag, username, page}=qs.parse(location.search,{\r\n      ignoreQueryPrefix:true\r\n    });\r\n    dispatch(listPosts({tag, username, page}));\r\n  },[dispatch, location.search])\r\n\r\n  return (\r\n    <PostList loading={loading} error={error} posts={posts} showWriteButton={user}/>\r\n  )\r\n}\r\n\r\nexport default withRouter(PostListContainer);"]},"metadata":{},"sourceType":"module"}