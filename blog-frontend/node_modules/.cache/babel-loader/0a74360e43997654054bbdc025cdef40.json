{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\VCprac\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\write\\\\TagBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagBoxBlock = styled.div`\n  width:100%;\n  border-top:1px solid ${palette.gray[2]};\n  padding-top:2rem;\n\n  h4{\n    color:${palette.gray[8]}\n    margin-top:0;\n    margin-bottom:0.5rem;\n  }\n`;\n_c = TagBoxBlock;\nconst TagForm = styled.form`\n  border-radius:4px;\n  overflow:hidden;\n  display:flex;\n  width:256px;\n  border:1px solid ${palette.gray[9]};\n  input,\n  button{\n    outline:none;\n    border:none;\n    font-size:1rem;\n  }\n  input{\n    paddin:0.5rem;\n    flex:1;\n  }\n  button{\n    cursor:pointer;\n    padding-right:1rem;\n    padding-left:1rem;\n    border:none;\n    background:${palette.gray[8]};\n    color:white;\n    font-weight:bold;\n    &:hover{\n      background:${palette.gray[6]}\n    }\n  }\n`;\n_c2 = TagForm;\nconst Tag = styled.div`\n  margin-right:0.5rem;\n  color:${palette.gray[6]};\n  cursor:pointer;\n  &:hover{\n    opacity:0.5;\n  }\n`;\n_c3 = Tag;\nconst TagListBlock = styled.div`\n  display:flex;\n  margin-top:0.5rem;\n`; //React 메모를 사용하여 tag값이 바뀔 때만 리렌더링 되도록 처리\n\n_c4 = TagListBlock;\nconst TagItem = /*#__PURE__*/React.memo(_c5 = _ref => {\n  let {\n    tag,\n    onRemove\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    onClick: () => onRemove(tag),\n    children: [\"#\", tag]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}); //React.memo 를 사용하여 tags 값이 바뀔때만 리렌더링되도록 처리\n\n_c6 = TagItem;\nconst TagList = /*#__PURE__*/React.memo(_c7 = _ref2 => {\n  let {\n    tags,\n    onRemove\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(TagListBlock, {\n    children: tags.map(tag => /*#__PURE__*/_jsxDEV(TagItem, {\n      tag: tag,\n      onRemove: onRemove\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n});\n_c8 = TagList;\n\nconst TagBox = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [localTags, setLocalTags] = useState([]);\n  const insertTag = useCallback(tag => {\n    if (!tag) return;\n    if (localTags.includes(tag)) return;\n    setLocalTags([...localTags, tag]);\n  }, [localTags]);\n  const onRemove = useCallback(tag => {\n    setLocalTags(localTags.filter(t => t !== tag));\n  }, [localTags]);\n  const onChange = useCallback(e => {\n    setInput(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    insertTag(input.trim());\n    setInput('');\n  }, [input, insertTag]);\n  return /*#__PURE__*/_jsxDEV(TagBoxBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagForm, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"put tag\",\n        value: input,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagList, {\n      tags: localTags,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagBox, \"TpctF9QRRXOqcJJUe8YAxmyXnks=\");\n\n_c9 = TagBox;\nexport default TagBox;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"TagBoxBlock\");\n$RefreshReg$(_c2, \"TagForm\");\n$RefreshReg$(_c3, \"Tag\");\n$RefreshReg$(_c4, \"TagListBlock\");\n$RefreshReg$(_c5, \"TagItem$React.memo\");\n$RefreshReg$(_c6, \"TagItem\");\n$RefreshReg$(_c7, \"TagList$React.memo\");\n$RefreshReg$(_c8, \"TagList\");\n$RefreshReg$(_c9, \"TagBox\");","map":{"version":3,"sources":["C:/Users/User/VCprac/blog/blog-frontend/src/components/write/TagBox.js"],"names":["React","useState","useCallback","styled","palette","TagBoxBlock","div","gray","TagForm","form","Tag","TagListBlock","TagItem","memo","tag","onRemove","TagList","tags","map","TagBox","input","setInput","localTags","setLocalTags","insertTag","includes","filter","t","onChange","e","target","value","onSubmit","preventDefault","trim"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,WAAxB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAW,GAACF,MAAM,CAACG,GAAI;AAC7B;AACA,yBAAyBF,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AACzC;AACA;AACA;AACA,YAAYH,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AAC5B;AACA;AACA;AACA,CAVA;KAAMF,W;AAYN,MAAMG,OAAO,GAACL,MAAM,CAACM,IAAK;AAC1B;AACA;AACA;AACA;AACA,qBAAqBL,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBH,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AACjC;AACA;AACA;AACA,mBAAmBH,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AACnC;AACA;AACA,CA5BA;MAAMC,O;AA8BN,MAAME,GAAG,GAACP,MAAM,CAACG,GAAI;AACrB;AACA,UAAUF,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AAC1B;AACA;AACA;AACA;AACA,CAPA;MAAMG,G;AASN,MAAMC,YAAY,GAACR,MAAM,CAACG,GAAI;AAC9B;AACA;AACA,CAHA,C,CAIA;;MAJMK,Y;AAKN,MAAMC,OAAO,gBAACZ,KAAK,CAACa,IAAN,OAAW;AAAA,MAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD;AAAA,sBACvB,QAAC,GAAD;AAAK,IAAA,OAAO,EAAE,MAAIA,QAAQ,CAACD,GAAD,CAA1B;AAAA,oBAAmCA,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,CAAX,CAAd,C,CAIA;;MAJMF,O;AAKN,MAAMI,OAAO,gBAAChB,KAAK,CAACa,IAAN,OAAW;AAAA,MAAC;AAACI,IAAAA,IAAD;AAAOF,IAAAA;AAAP,GAAD;AAAA,sBACvB,QAAC,YAAD;AAAA,cACGE,IAAI,CAACC,GAAL,CAASJ,GAAG,iBACX,QAAC,OAAD;AAAmB,MAAA,GAAG,EAAEA,GAAxB;AAA6B,MAAA,QAAQ,EAAEC;AAAvC,OAAcD,GAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,CAAX,CAAd;MAAME,O;;AAQN,MAAMG,MAAM,GAAC,MAAI;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMuB,SAAS,GAACtB,WAAW,CACzBY,GAAG,IAAE;AACH,QAAG,CAACA,GAAJ,EAAS;AACT,QAAGQ,SAAS,CAACG,QAAV,CAAmBX,GAAnB,CAAH,EAA4B;AAC5BS,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeR,GAAf,CAAD,CAAZ;AACD,GALwB,EAMzB,CAACQ,SAAD,CANyB,CAA3B;AASA,QAAMP,QAAQ,GAACb,WAAW,CACxBY,GAAG,IAAE;AACHS,IAAAA,YAAY,CAACD,SAAS,CAACI,MAAV,CAAiBC,CAAC,IAAEA,CAAC,KAAGb,GAAxB,CAAD,CAAZ;AACD,GAHuB,EAIxB,CAACQ,SAAD,CAJwB,CAA1B;AAOA,QAAMM,QAAQ,GAAC1B,WAAW,CAAC2B,CAAC,IAAE;AAC5BR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFyB,EAExB,EAFwB,CAA1B;AAIA,QAAMC,QAAQ,GAAC9B,WAAW,CACxB2B,CAAC,IAAE;AACDA,IAAAA,CAAC,CAACI,cAAF;AACAT,IAAAA,SAAS,CAACJ,KAAK,CAACc,IAAN,EAAD,CAAT;AACAb,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALuB,EAMxB,CAACD,KAAD,EAAQI,SAAR,CANwB,CAA1B;AAQA,sBACE,QAAC,WAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEQ,QAAnB;AAAA,8BACE;AAAO,QAAA,WAAW,EAAC,SAAnB;AAA6B,QAAA,KAAK,EAAEZ,KAApC;AAA2C,QAAA,QAAQ,EAAEQ;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEN,SAAf;AAA0B,MAAA,QAAQ,EAAEP;AAApC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1CD;;GAAMI,M;;MAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React,{useState, useCallback} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst TagBoxBlock=styled.div`\r\n  width:100%;\r\n  border-top:1px solid ${palette.gray[2]};\r\n  padding-top:2rem;\r\n\r\n  h4{\r\n    color:${palette.gray[8]}\r\n    margin-top:0;\r\n    margin-bottom:0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm=styled.form`\r\n  border-radius:4px;\r\n  overflow:hidden;\r\n  display:flex;\r\n  width:256px;\r\n  border:1px solid ${palette.gray[9]};\r\n  input,\r\n  button{\r\n    outline:none;\r\n    border:none;\r\n    font-size:1rem;\r\n  }\r\n  input{\r\n    paddin:0.5rem;\r\n    flex:1;\r\n  }\r\n  button{\r\n    cursor:pointer;\r\n    padding-right:1rem;\r\n    padding-left:1rem;\r\n    border:none;\r\n    background:${palette.gray[8]};\r\n    color:white;\r\n    font-weight:bold;\r\n    &:hover{\r\n      background:${palette.gray[6]}\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag=styled.div`\r\n  margin-right:0.5rem;\r\n  color:${palette.gray[6]};\r\n  cursor:pointer;\r\n  &:hover{\r\n    opacity:0.5;\r\n  }\r\n`\r\n\r\nconst TagListBlock=styled.div`\r\n  display:flex;\r\n  margin-top:0.5rem;\r\n`\r\n//React 메모를 사용하여 tag값이 바뀔 때만 리렌더링 되도록 처리\r\nconst TagItem=React.memo(({tag, onRemove})=>\r\n  <Tag onClick={()=>onRemove(tag)}>#{tag}</Tag>\r\n  )\r\n\r\n//React.memo 를 사용하여 tags 값이 바뀔때만 리렌더링되도록 처리\r\nconst TagList=React.memo(({tags, onRemove})=>(\r\n  <TagListBlock>\r\n    {tags.map(tag=>(\r\n      <TagItem key={tag} tag={tag} onRemove={onRemove}></TagItem>\r\n    ))}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox=()=>{\r\n  const [input, setInput]=useState('');\r\n  const [localTags, setLocalTags]=useState([]);\r\n\r\n  const insertTag=useCallback(\r\n    tag=>{\r\n      if(!tag) return;\r\n      if(localTags.includes(tag)) return;\r\n      setLocalTags([...localTags, tag]);\r\n    },\r\n    [localTags]\r\n  );\r\n\r\n  const onRemove=useCallback(\r\n    tag=>{\r\n      setLocalTags(localTags.filter(t=>t!==tag));\r\n    },\r\n    [localTags]\r\n  )\r\n\r\n  const onChange=useCallback(e=>{\r\n    setInput(e.target.value);\r\n  },[]);\r\n\r\n  const onSubmit=useCallback(\r\n    e=>{\r\n      e.preventDefault();\r\n      insertTag(input.trim());\r\n      setInput('');\r\n    },\r\n    [input, insertTag]\r\n  );\r\n  return(\r\n    <TagBoxBlock>\r\n      <h4>tag</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input placeholder='put tag' value={input} onChange={onChange}></input>\r\n        <button type='submit'>add</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove}></TagList>\r\n    </TagBoxBlock>\r\n  )\r\n}\r\n\r\nexport default TagBox;"]},"metadata":{},"sourceType":"module"}